package strings;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Given a string, we have to find out all subsequences of it. A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.
 * Examples:
 * <p>
 * Input : abc
 * Output : a, b, c, ab, bc, ac, abc
 * <p>
 * Input : aaa
 * Output : a, aa, aaa
 */
public class SubSequenceOfString {
  static List<String> list = new ArrayList<>();
  static Set<String> set = new HashSet<>();

  /**
   * Method 1 (Pick and Donâ€™t Pick Concept)
   *
   * @param str
   * @param result
   */
  public static void subSequence(String str, String result) {
    if (str.length() == 0) {
      list.add(result);
      return;
    }
    subSequence(str.substring(1), result + str.charAt(0));
    subSequence(str.substring(1), result);
  }

  public static void subSequence(String str) {
    for (int i = 0; i < str.length(); i++) {
      for (int j = str.length(); j > i; j--) {
        String sub_str = str.substring(i, j);
        if (!set.contains(sub_str)) {
          set.add(sub_str);
        }
        for (int k = 0; k < sub_str.length() - 1; k++) {
          StringBuffer sb = new StringBuffer(sub_str);
          sb.deleteCharAt(k);
          if (!set.contains(sb)) {
            subSequence(sb.toString());
          }
        }
      }
    }

  }

  static void printSubSeqRec(String str, int n, int index, String curr) {
    if (index == n) {
      return;
    }
    if (curr != null && !curr.trim().isEmpty()) {
      System.out.print(curr + ", ");
    }
    for (int i = index + 1; i < n; i++) {
      curr += str.charAt(i);
      printSubSeqRec(str, n, i, curr);
      curr = curr.substring(0, curr.length() - 1);
    }
  }

  static void printSubSeq(String str) {
    int index = -1;
    String curr = "";
    printSubSeqRec(str, str.length(), index, curr);
  }

  public static void main(String[] args) {
    String s = "abcd";
    subSequence(s, ""); // Calling a function
    System.out.println(list);
    System.out.println("*********************");
    subSequence(s);
    System.out.println(set);
    System.out.println("*********************");
    printSubSeq(s);
  }
}
