package strings;

/**
 * Look-and-Say Sequence
 * Difficulty Level : Medium
 * Last Updated : 22 Jul, 2019
 * Find the n’th term in Look-and-say (Or Count and Say) Sequence. The look-and-say sequence is the sequence of below integers:
 * 1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, …
 * How is above sequence generated?
 * n’th term in generated by reading (n-1)’th term.
 * <p>
 * The first term is "1"
 * <p>
 * Second term is "11", generated by reading first term as "One 1"
 * (There is one 1 in previous term)
 * <p>
 * Third term is "21", generated by reading second term as "Two 1"
 * <p>
 * Fourth term is "1211", generated by reading third term as "One 2 One 1"
 * <p>
 * and so on
 */
public class LookAndSaySequence {

  public static String countnAndSay(int n) {
    if (n == 1) {
      return "1";
    }
    if (n == 2) {
      return "11";
    }
    String previous = "11";
    for (int i = 3; i <= n; i++) {
      // In below for loop, previous character is processed in current iteration. That is why a dummy character is added to make sure that loop runs one extra iteration.
      previous += '$';
      int length = previous.length();
      //Initialise the count of matching char.
      int count = 1;
      //i th term in sentence.
      String temp = "";
      char[] arr = previous.toCharArray();
      for (int j = 1; j < length; j++) {
        if (arr[j] != arr[j - 1]) {
          temp += count + 0;
          temp += arr[j - 1];
          count = 1;
        } else {
          count++;
        }
      }
      previous = temp;
    }
    return previous;
  }

  public static void main(String[] args) {
    int n = 4;
    System.out.println(countnAndSay(n));
  }
}
